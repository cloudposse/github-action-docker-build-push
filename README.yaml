#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name: github-action-docker-build-push

# Tags of this project
tags:
  - github-action

# Logo for this project
#logo: docs/logo.png

# License of this project
license: "APACHE2"

# Canonical GitHub repo
github_repo: cloudposse/github-action-docker-build-push

# Badges to display
badges:
  - name: Latest Release
    image: https://img.shields.io/github/release/cloudposse/github-action-docker-build-push.svg?style=for-the-badge
    url: https://github.com/cloudposse/github-action-docker-build-push/releases/latest
  - name: Last Updated
    image: https://img.shields.io/github/last-commit/cloudposse/github-action-docker-build-push.svg?style=for-the-badge
    url: https://github.com/cloudposse/github-action-docker-build-push/commits
  - name: Slack Community
    image: https://slack.cloudposse.com/for-the-badge.svg
    url: https://cloudposse.com/slack

# List any related terraform modules that this module may be used with or that this module depends on.
related: []

# Short description of this project
description: Build Docker image and push it

introduction: |-
  Build Docker image and push it. 

references:
  - name: "github-actions-workflows"
    description: "Reusable workflows for different types of projects"
    url: "https://github.com/cloudposse/github-actions-workflows"
  - name: "example-github-action-release-workflow"
    description: "Example application with complicated release workflow"
    url: "https://github.com/cloudposse/example-github-action-release-workflow"

# How to use this project
usage: |-
  ```yaml
    name: Push into main branch
    on:
      push:
        branches: [ master ]

    jobs:
      context:
        runs-on: ubuntu-latest
        steps:
        - name: Checkout
          uses: actions/checkout@v3

        - name: Build
          id: build
          uses: cloudposse/github-action-docker-build-push@main
          with:
            registry: registry.hub.docker.com
            organization: "${{ github.event.repository.owner.login }}"
            repository: "${{ github.event.repository.name }}"
            login: "${{ secrets.DOCKERHUB_USERNAME }}"
            password: "${{ secrets.DOCKERHUB_PASSWORD }}"
            platforms: linux/amd64,linux/arm64

      outputs:
        image: ${{ steps.build.outputs.image }}
        tag: ${{ steps.build.outputs.tag }}
  ```
  > [!TIP]
  > If omitted, `cache-from` and `cache-to` will default to `gha`.
  > In an AWS environment, we recommend using [ECR as a remote cache](https://aws.amazon.com/blogs/containers/announcing-remote-cache-support-in-amazon-ecr-for-buildkit-clients/).

  ```diff
       - name: Build
         id: build
         uses: cloudposse/github-action-docker-build-push@main
         with:
          registry: registry.hub.docker.com
          organization: "${{ github.event.repository.owner.login }}"
          repository: "${{ github.event.repository.name }}"
  +       cache-from: "type=registry,ref=registry.hub.docker.com/${{ github.event.repository.owner.login }}/${{ github.event.repository.name }}:cache"
  +       cache-to: "mode=max,image-manifest=true,oci-mediatypes=true,type=registry,ref=registry.hub.docker.com/${{ github.event.repository.owner.login }}/${{ github.event.repository.name }}:cache"
  ```

include: []
contributors: []
